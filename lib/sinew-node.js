// Generated by CoffeeScript 1.3.3
(function() {
  var format_urlpath, fs, get, helper, jquery, jsdom, parse_html, path, request, _;

  request = require('request');

  jsdom = require('jsdom');

  _ = require('underscore');

  fs = require('fs');

  path = require('path');

  helper = require('./helper');

  jquery = fs.readFileSync(path.join(__dirname, '../support/jquery-1.7.2.min.js')).toString();

  module.exports.get = get = function(url, callback) {
    var file_path, host_path, hostname, siniew_path, url_path, _ref;
    if (callback == null) {
      callback = function() {};
    }
    if (!helper.valid_url(url)) {
      return console.log("[Error] url not valid");
    }
    _ref = helper.parse_url(url), hostname = _ref[0], url_path = _ref[1];
    siniew_path = path.join(process.env.HOME, '.sinew-node');
    host_path = path.join(siniew_path, hostname);
    url_path = format_urlpath(url_path);
    file_path = path.join(host_path, url_path);
    helper.mkdir_if_necessary(siniew_path);
    helper.mkdir_if_necessary(host_path);
    if (fs.existsSync(file_path)) {
      console.log("[Info] read url locally: " + url);
      return parse_html(fs.readFileSync(file_path, 'utf-8'), callback);
    } else {
      console.log("[Info] requesting url: " + url);
      return request(url, function(e, res, body) {
        if (e) {
          return console.log(e);
        }
        if (res.statusCode !== 200) {
          return console.log("[Connect Error] response status is " + res.statusCode);
        }
        parse_html(body, callback);
        return fs.writeFileSync(file_path, body, 'utf-8');
      });
    }
  };

  parse_html = function(body, callback) {
    return jsdom.env({
      html: body,
      src: [jquery],
      done: function(e, window) {
        if (e) {
          return console.log("[Parsing Error] " + e.code);
        }
        return callback.apply({
          $: window.$,
          _: _
        });
      }
    });
  };

  format_urlpath = function(url_path) {
    url_path = url_path.replace(/\/|&/g, ',');
    return url_path = url_path.replace(/\?/g, ',,');
  };

}).call(this);
